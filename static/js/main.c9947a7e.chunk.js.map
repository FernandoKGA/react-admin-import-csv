{"version":3,"sources":["../../../../../src/i18n/index.ts","../../../../src/SimpleLogger.ts","../../../../src/index.ts","../../../../src/import-csv-button.tsx","../../../../src/import-controller.ts","../../../../src/csv-extractor.ts","../../../../src/uploader.ts","../../../../../src/i18n/es.ts","../../../../../src/i18n/en.ts","../../../../../src/i18n/cn.ts","posts.js","App.js","index.js"],"names":["exports","ListActions","props","className","basePath","total","resource","currentSort","filterValues","exporter","config","logging","validateRow","row","a","id","TopToolbar","CreateButton","ExportButton","disabled","sort","filter","PostList","List","actions","Datagrid","TextField","source","ShowButton","label","EditButton","DeleteButton","redirect","PostShow","Show","SimpleShowLayout","PostCreate","Create","SimpleForm","TextInput","PostEdit","Edit","App","dataProvider","fakeDataProvider","posts","title","locale","useLocale","messages","en","englishMessages","domainMessages","cn","chineseMessages","es","spanishMessages","i18nProvider","polyglotI18nProvider","resolveBrowserLocale","Admin","Resource","name","list","show","edit","create","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c9947a7e.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar es_1 = require(\"./es\");\nexports.es = es_1.default;\nvar en_1 = require(\"./en\");\nexports.en = en_1.default;\nvar cn_1 = require(\"./cn\");\nexports.cn = cn_1.default;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass SimpleLogger {\n    constructor(prefix, debug) {\n        this.prefix = prefix;\n        this.debug = debug;\n        this.loggerID = Math.random()\n            .toString(32)\n            .slice(2, 6);\n    }\n    getLogString() {\n        return `🌟 react-admin-import-csv:: ${this.prefix} [${this.loggerID}] `;\n    }\n    get log() {\n        if (!this.debug) {\n            return (...any) => { };\n        }\n        const boundLogFn = console.log.bind(console, this.getLogString());\n        return boundLogFn;\n    }\n    get warn() {\n        if (!this.debug) {\n            return (...any) => { };\n        }\n        const boundLogFn = console.warn.bind(console, this.getLogString());\n        return boundLogFn;\n    }\n    get error() {\n        if (!this.debug) {\n            return (...any) => { };\n        }\n        const boundLogFn = console.error.bind(console, this.getLogString());\n        return boundLogFn;\n    }\n    setEnabled(logging) {\n        this.debug = logging;\n    }\n}\nexports.SimpleLogger = SimpleLogger;\n//# sourceMappingURL=SimpleLogger.js.map","\"use strict\";\n/*\n * Fublic API Surface of ngx-firestate\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_redux_1 = require(\"react-redux\");\nconst import_csv_button_1 = require(\"./import-csv-button\");\nexports.ImportButton = import_csv_button_1.ImportButton;\nexports.default = react_redux_1.connect()(import_csv_button_1.ImportButton);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importDefault(require(\"react\"));\nconst react_admin_1 = require(\"react-admin\");\nconst core_1 = require(\"@material-ui/core\");\nconst icons_1 = require(\"@material-ui/icons\");\nconst GetApp_1 = __importDefault(require(\"@material-ui/icons/GetApp\"));\nconst SimpleLogger_1 = require(\"./SimpleLogger\");\nconst import_controller_1 = require(\"./import-controller\");\nconst uploader_1 = require(\"./uploader\");\nexports.BtnOption = (props) => {\n    return (react_1.default.createElement(core_1.ListItem, { disableGutters: true },\n        react_1.default.createElement(core_1.Button, { style: { width: \"100%\", backgroundColor: \"#efefef\", padding: \"13px\" }, onClick: props.onClick },\n            props.icon,\n            react_1.default.createElement(\"span\", { style: { width: \"100%\", textAlign: \"left\", marginLeft: \"8px\" } }, props.label))));\n};\nexports.ImportButton = (props) => {\n    const refresh = react_admin_1.useRefresh();\n    const translate = react_admin_1.useTranslate();\n    const dataProvider = react_admin_1.useDataProvider();\n    const { logging, parseConfig, preCommitCallback, postCommitCallback, validateRow, } = props;\n    let { variant, label, resource, resourceName } = props;\n    const logger = new SimpleLogger_1.SimpleLogger(\"import-csv-button\", true);\n    logger.setEnabled(logging);\n    if (!resource) {\n        throw new Error(translate(\"csv.error.emptyResource\"));\n    }\n    if (!label) {\n        label = translate(\"csv.main.import\");\n    }\n    if (!variant) {\n        variant = \"text\";\n    }\n    if (!resourceName) {\n        resourceName = resource;\n    }\n    const [open, setOpen] = react_1.default.useState(false);\n    const [openAskDecide, setOpenAskDecide] = react_1.default.useState(false);\n    const [values, setValues] = react_1.default.useState(null);\n    const [idsConflicting, setIdsConflicting] = react_1.default.useState(null);\n    const [isLoading, setIsLoading] = react_1.default.useState(null);\n    const [currentValue, setCurrentValue] = react_1.default.useState(null);\n    const [fileName, setFileName] = react_1.default.useState(null);\n    let refInput;\n    function resetVars() {\n        setOpen(false);\n        setOpenAskDecide(false);\n        setValues(null);\n        setIdsConflicting(null);\n        setIsLoading(null);\n        setFileName(null);\n    }\n    function createRows(vals) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return uploader_1.create(logging, dataProvider, resourceName, vals, preCommitCallback, postCommitCallback);\n        });\n    }\n    function updateRows(vals) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return uploader_1.update(logging, dataProvider, resourceName, vals, preCommitCallback, postCommitCallback);\n        });\n    }\n    function clickImportButton() {\n        resetVars();\n        refInput.value = \"\";\n        refInput.click();\n    }\n    const onFileAdded = (e) => __awaiter(void 0, void 0, void 0, function* () {\n        const file = e.target.files && e.target.files[0];\n        setFileName(file.name);\n        setOpen(true);\n        try {\n            // Is valid csv\n            logger.log(\"Parsing CSV file\");\n            const csvItems = yield import_controller_1.GetCSVItems(logging, translate, file, parseConfig);\n            setValues(csvItems);\n            // Does CSV pass user validation\n            logger.log(\"Validating CSV file\");\n            yield import_controller_1.CheckCSVValidation(logging, translate, csvItems, validateRow);\n            // Are there any import overwrites?\n            logger.log(\"Checking rows to import\");\n            const collidingIds = yield import_controller_1.GetIdsColliding(logging, translate, dataProvider, csvItems, resourceName);\n            setIdsConflicting(collidingIds);\n            const hasCollidingIds = !!collidingIds.length;\n            logger.log(\"Is has colliding ids?\", { hasCollidingIds, collidingIds });\n            if (hasCollidingIds) {\n                // Ask Replace X Rows? Skip these rows? Decied For Each?\n                const collindingIdsSet = new Set(collidingIds.map((id) => id));\n                const csvItemsNotColliding = csvItems.filter((item) => !collindingIdsSet.has(item.id));\n                logger.log(\"Importing items which arent colliding\", {\n                    csvItemsNotColliding,\n                });\n                yield createRows(csvItemsNotColliding);\n            }\n            else {\n                yield createRows(csvItems);\n                handleClose();\n            }\n            // Begin Import\n        }\n        catch (error) {\n            resetVars();\n            logger.error(error);\n        }\n    });\n    const notify = react_admin_1.useNotify();\n    const handleClose = () => {\n        resetVars();\n        notify(\"csv.alert.imported\");\n        refresh();\n    };\n    const handleReplace = () => __awaiter(void 0, void 0, void 0, function* () {\n        logger.log(\"handleReplace\");\n        try {\n            setIsLoading(true);\n            yield new Promise((res) => setTimeout(res, 1000));\n            const collindingIdsSet = new Set(idsConflicting.map((id) => id));\n            const valuesColliding = values.filter((item) => collindingIdsSet.has(item.id));\n            yield updateRows(valuesColliding);\n            handleClose();\n        }\n        catch (error) {\n            setIsLoading(false);\n            logger.error(\"handleReplace\", error);\n        }\n    });\n    const handleSkip = () => {\n        logger.log(\"handleSkip\");\n        handleClose();\n    };\n    const handleAskDecide = () => __awaiter(void 0, void 0, void 0, function* () {\n        logger.log(\"handleAskDecide\");\n        setOpen(false);\n        nextConflicting();\n        setOpenAskDecide(true);\n    });\n    const nextConflicting = () => {\n        const currentId = Array.isArray(idsConflicting) && idsConflicting.pop();\n        setIdsConflicting(idsConflicting);\n        const foundValue = Array.isArray(values) && values.filter((v) => v.id === currentId).pop();\n        logger.log(\"nextConflicting\", { foundValue, currentId });\n        const isLast = !foundValue;\n        if (!isLast) {\n            setCurrentValue(foundValue);\n        }\n        return foundValue && Object.assign({}, foundValue);\n    };\n    const handleAskDecideReplace = () => __awaiter(void 0, void 0, void 0, function* () {\n        logger.log(\"handleAskDecideReplace\");\n        const val = nextConflicting();\n        if (!val) {\n            return handleClose();\n        }\n        yield updateRows([val]);\n    });\n    const handleAskDecideAddAsNew = () => __awaiter(void 0, void 0, void 0, function* () {\n        logger.log(\"handleAskDecideAddAsNew\");\n        const val = nextConflicting();\n        if (!val) {\n            return handleClose();\n        }\n        delete val.id;\n        yield createRows([val]);\n    });\n    const handleAskDecideSkip = () => __awaiter(void 0, void 0, void 0, function* () {\n        logger.log(\"handleAskDecideSkip\");\n        const val = nextConflicting();\n        if (!val) {\n            return handleClose();\n        }\n        createRows([val]);\n    });\n    const handleAskDecideSkipAll = () => __awaiter(void 0, void 0, void 0, function* () {\n        logger.log(\"handleAskDecideSkipAll\");\n        handleClose();\n    });\n    return (react_1.default.createElement(react_1.default.Fragment, null,\n        react_1.default.createElement(core_1.Tooltip, { title: translate(\"csv.dialog.extension\") },\n            react_1.default.createElement(\"div\", null,\n                react_1.default.createElement(react_admin_1.Button, { color: \"primary\", component: \"span\", variant: variant, label: label, onClick: clickImportButton },\n                    react_1.default.createElement(GetApp_1.default, { style: { transform: \"rotate(180deg)\", fontSize: \"20\" } })),\n                react_1.default.createElement(\"input\", { ref: (ref) => (refInput = ref), type: \"file\", style: { display: \"none\" }, onChange: onFileAdded, accept: \".csv,.tsv\" }))),\n        react_1.default.createElement(core_1.Dialog, { open: open, onClose: handleClose, \"aria-labelledby\": \"alert-dialog-title\", \"aria-describedby\": \"alert-dialog-description\" },\n            react_1.default.createElement(core_1.DialogTitle, { id: \"alert-dialog-title\" },\n                \"Importing to \",\n                resourceName),\n            react_1.default.createElement(core_1.DialogContent, null,\n                react_1.default.createElement(\"div\", { style: { width: \"400px\", maxWidth: \"100%\" } },\n                    react_1.default.createElement(\"p\", { style: {\n                            fontFamily: \"sans-serif\",\n                            margin: \"0\",\n                            fontSize: \"0.9em\",\n                            marginBottom: \"10px\",\n                            marginTop: \"-7px\",\n                            color: \"#555\",\n                        } },\n                        \"Importing \",\n                        values && values.length,\n                        \" items from '\",\n                        fileName,\n                        \"' to\",\n                        \" \",\n                        resourceName),\n                    isLoading && (react_1.default.createElement(\"div\", { style: {\n                            textAlign: \"center\",\n                            paddingTop: \"10px\",\n                            paddingBottom: \"10px\",\n                        } },\n                        react_1.default.createElement(core_1.CircularProgress, { variant: \"indeterminate\" }),\n                        react_1.default.createElement(\"p\", { style: {\n                                fontFamily: \"sans-serif\",\n                            } }, \"Loading...\"))),\n                    idsConflicting && idsConflicting.length > 0 && !isLoading && (react_1.default.createElement(\"div\", null,\n                        react_1.default.createElement(\"p\", { style: { fontFamily: \"sans-serif\", margin: \"0\" } },\n                            \"The resource \",\n                            react_1.default.createElement(\"strong\", null, resourceName),\n                            \" has\",\n                            \" \",\n                            react_1.default.createElement(\"strong\", null, idsConflicting && idsConflicting.length),\n                            \" \",\n                            \"records with the same Ids\"),\n                        react_1.default.createElement(core_1.List, null,\n                            react_1.default.createElement(exports.BtnOption, { onClick: handleReplace, icon: react_1.default.createElement(icons_1.Done, { htmlColor: \"#29c130\" }), label: \"Replace the rows\" }),\n                            react_1.default.createElement(exports.BtnOption, { onClick: handleSkip, icon: react_1.default.createElement(icons_1.FileCopy, { htmlColor: \"#3a88ca\" }), label: \"Skip these rows\" }),\n                            react_1.default.createElement(exports.BtnOption, { onClick: handleAskDecide, icon: react_1.default.createElement(icons_1.Undo, { htmlColor: \"black\" }), label: \"Let me decide for each row\" }))))))),\n        react_1.default.createElement(core_1.Dialog, { open: openAskDecide, onClose: handleClose, \"aria-labelledby\": \"alert-dialog-title\", \"aria-describedby\": \"alert-dialog-description\" },\n            react_1.default.createElement(core_1.DialogTitle, { id: \"alert-dialog-title\" },\n                \"Importing id \",\n                currentValue && currentValue.id,\n                \" to \",\n                resourceName),\n            react_1.default.createElement(core_1.DialogContent, null,\n                react_1.default.createElement(\"div\", { style: { width: \"400px\", maxWidth: \"100%\" } },\n                    react_1.default.createElement(\"p\", { style: {\n                            fontFamily: \"sans-serif\",\n                            margin: \"0\",\n                            fontSize: \"0.9em\",\n                            marginBottom: \"10px\",\n                            marginTop: \"-7px\",\n                            color: \"#555\",\n                        } },\n                        \"Importing \",\n                        values && values.length,\n                        \" items from '\",\n                        fileName,\n                        \"' to\",\n                        \" \",\n                        resourceName),\n                    isLoading && (react_1.default.createElement(\"div\", { style: {\n                            textAlign: \"center\",\n                            paddingTop: \"10px\",\n                            paddingBottom: \"10px\",\n                        } },\n                        react_1.default.createElement(core_1.CircularProgress, { variant: \"indeterminate\" }),\n                        react_1.default.createElement(\"p\", { style: {\n                                fontFamily: \"sans-serif\",\n                            } }, \"Loading...\"))),\n                    !isLoading && (react_1.default.createElement(\"div\", null,\n                        react_1.default.createElement(\"p\", { style: { fontFamily: \"sans-serif\", margin: \"0\" } },\n                            \"The resource \",\n                            react_1.default.createElement(\"strong\", null, resourceName),\n                            \" has\",\n                            \" \",\n                            react_1.default.createElement(\"strong\", null, idsConflicting && idsConflicting.length + 1),\n                            \" \",\n                            \"more records with conflicting ids\"),\n                        react_1.default.createElement(core_1.List, null,\n                            react_1.default.createElement(exports.BtnOption, { onClick: handleAskDecideReplace, icon: react_1.default.createElement(icons_1.Done, { htmlColor: \"#29c130\" }), label: \"Replace the row id=\" + (currentValue && currentValue.id) }),\n                            react_1.default.createElement(exports.BtnOption, { onClick: handleAskDecideAddAsNew, icon: react_1.default.createElement(icons_1.Add, { htmlColor: \"#3a88ca\" }), label: \"Add as new row (Don't replace)\" }),\n                            react_1.default.createElement(exports.BtnOption, { onClick: handleAskDecideSkip, icon: react_1.default.createElement(icons_1.Undo, { htmlColor: \"black\" }), label: \"Skip this row (Don't replace)\" }),\n                            react_1.default.createElement(exports.BtnOption, { onClick: handleAskDecideSkipAll, icon: react_1.default.createElement(icons_1.Clear, { htmlColor: \"#3a88ca\" }), label: \"Cancel\" })))))))));\n};\n//# sourceMappingURL=import-csv-button.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst csv_extractor_1 = require(\"./csv-extractor\");\nconst SimpleLogger_1 = require(\"./SimpleLogger\");\nfunction makeLogger(logging) {\n    const logger = new SimpleLogger_1.SimpleLogger(\"import-controller\", true);\n    logger.setEnabled(logging);\n    return logger;\n}\nfunction GetIdsColliding(logging, translate, dataProvider, csvValues, resourceName) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const logger = makeLogger(logging);\n        const hasIds = csvValues.some((v) => v.id);\n        if (!hasIds) {\n            return [];\n        }\n        try {\n            const ids = csvValues.filter(v => !!v.id).map((v) => v.id + '');\n            const recordsColliding = yield dataProvider.getMany(resourceName, {\n                ids: ids,\n            });\n            const recordIdsColliding = recordsColliding.data.map((r) => r.id + '');\n            return recordIdsColliding;\n        }\n        catch (error) {\n            logger.error(\"GetIdsColliding\", { csvValues }, error);\n            throw translate(\"csv.error.csvInvalidUser\");\n        }\n    });\n}\nexports.GetIdsColliding = GetIdsColliding;\nfunction CheckCSVValidation(logging, translate, csvValues, validateRow) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const logger = makeLogger(logging);\n        if (!validateRow) {\n            return;\n        }\n        try {\n            yield Promise.all(csvValues.map((v) => validateRow(v)));\n        }\n        catch (error) {\n            logger.error(\"onFileAdded\", { csvValues }, error);\n            throw translate(\"csv.error.csvInvalidUser\");\n        }\n    });\n}\nexports.CheckCSVValidation = CheckCSVValidation;\nfunction GetCSVItems(logging, translate, file, parseConfig) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const logger = makeLogger(logging);\n        let csvValues;\n        try {\n            const csvValues = yield csv_extractor_1.processCsvFile(file, parseConfig);\n            return csvValues;\n        }\n        catch (error) {\n            logger.error(\"onFileAdded\", { csvValues }, error);\n            throw translate(\"csv.error.csvInvalid\");\n        }\n    });\n}\nexports.GetCSVItems = GetCSVItems;\n//# sourceMappingURL=import-controller.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst papaparse_1 = require(\"papaparse\");\nconst lensPath_1 = __importDefault(require(\"ramda/src/lensPath\"));\nconst over_1 = __importDefault(require(\"ramda/src/over\"));\nconst setObjectValue = (object, path, value) => {\n    const lensPathFunction = lensPath_1.default(path.split(\".\"));\n    return over_1.default(lensPathFunction, () => value, object || {});\n};\nfunction processCsvFile(file, parseConfig = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!file) {\n            return;\n        }\n        const csvData = yield getCsvData(file, parseConfig);\n        return processCsvData(csvData);\n    });\n}\nexports.processCsvFile = processCsvFile;\nfunction getCsvData(file, inputConfig = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let config = {};\n        const isObject = !!inputConfig && typeof inputConfig === \"object\";\n        if (isObject) {\n            config = inputConfig;\n        }\n        return new Promise((resolve, reject) => papaparse_1.parse(file, Object.assign(Object.assign({ \n            // Defaults\n            delimiter: \",\", skipEmptyLines: true }, config), { \n            // Callbacks\n            complete: (result) => resolve(result.data), error: (error) => reject(error) })));\n    });\n}\nexports.getCsvData = getCsvData;\nfunction processCsvData(data) {\n    if (Array.isArray(data[0])) {\n        const topRowKeys = data[0];\n        const dataRows = data.slice(1).map((row) => {\n            let value = {};\n            topRowKeys.forEach((key, index) => {\n                value = setObjectValue(value, key, row[index]);\n            });\n            return value;\n        });\n        return dataRows;\n    }\n    else {\n        const dataRows = [];\n        data.forEach((obj) => {\n            let value = {};\n            for (let key in obj)\n                value = setObjectValue(value, key, obj[key]);\n            dataRows.push(value);\n        });\n        return dataRows;\n    }\n}\nexports.processCsvData = processCsvData;\n//# sourceMappingURL=csv-extractor.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SimpleLogger_1 = require(\"./SimpleLogger\");\nlet logger = new SimpleLogger_1.SimpleLogger(\"uploader\", false);\nfunction create(logging, dataProvider, resource, values, preCommitCallback, postCommitCallback) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const parsedValues = preCommitCallback\n            ? preCommitCallback(\"create\", values)\n            : values;\n        const reportItems = yield createInDataProvider(logging, dataProvider, resource, parsedValues);\n        if (postCommitCallback) {\n            postCommitCallback(reportItems);\n        }\n        const shouldReject = !postCommitCallback && reportItems.some((r) => !r.success);\n        if (shouldReject) {\n            return Promise.reject(reportItems.map((r) => r.response));\n        }\n    });\n}\nexports.create = create;\nfunction update(logging, dataProvider, resource, values, preCommitCallback, postCommitCallback) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const parsedValues = preCommitCallback\n            ? preCommitCallback(\"create\", values)\n            : values;\n        const reportItems = yield updateInDataProvider(logging, dataProvider, resource, parsedValues);\n        if (postCommitCallback) {\n            postCommitCallback(reportItems);\n        }\n        const shouldReject = !postCommitCallback && reportItems.some((r) => !r.success);\n        if (shouldReject) {\n            return Promise.reject(reportItems.map((r) => r.response));\n        }\n    });\n}\nexports.update = update;\nfunction createInDataProvider(logging, dataProvider, resource, values) {\n    return __awaiter(this, void 0, void 0, function* () {\n        logger.setEnabled(logging);\n        logger.log(\"addInDataProvider\", { dataProvider, resource, values });\n        const reportItems = [];\n        try {\n            yield dataProvider.createMany(resource, { data: values });\n        }\n        catch (error) {\n            const shouldUseFallback = error.toString().includes(\"Unknown dataProvider\");\n            if (shouldUseFallback) {\n                logger.log(\"addInDataProvider\", \"createMany not found on provider: using fallback\");\n                try {\n                    yield createInDataProviderFallback(dataProvider, resource, values);\n                }\n                catch (error) {\n                    logger.error(\"addInDataProvider\", error);\n                }\n            }\n        }\n        return reportItems;\n    });\n}\nfunction createInDataProviderFallback(dataProvider, resource, values) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const reportItems = [];\n        yield Promise.all(values.map((value) => dataProvider\n            .create(resource, { data: value })\n            .then((res) => reportItems.push({ value, success: true, response: res }))\n            .catch((err) => reportItems.push({ value, success: false, err }))));\n        return reportItems;\n    });\n}\nfunction updateInDataProvider(logging, dataProvider, resource, values) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const ids = values.map((v) => v.id);\n        logger.setEnabled(logging);\n        logger.log(\"updateInDataProvider\", {\n            dataProvider,\n            resource,\n            values,\n            logging,\n            ids,\n        });\n        const reportItems = [];\n        yield dataProvider\n            .updateMany(resource, { ids: ids, data: values })\n            .then((res) => reportItems.push({ value: values, success: true, response: res }))\n            .catch((err) => reportItems.push({ value: values, success: false, err }));\n        return reportItems;\n    });\n}\n//# sourceMappingURL=uploader.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    csv: {\n        main: {\n            import: 'Importar',\n        },\n        error: {\n            noId: \"Sobrescribir requiere el campo 'id'\",\n            hasId: \"Crear no debe incluir el campo 'id'\",\n            importing: 'Error al importar',\n            emptyResource: \"La propiedad 'resource' esta vacia. ¿Fue pasada {...props} al componente `ImportButton`?\",\n        },\n        alert: {\n            imported: 'Importado %{filename}',\n        },\n        dialog: {\n            importTo: 'Importar para',\n            dataFileReq: 'Requisitos del archivo',\n            extension: \"Debe ser un archivo '.csv' o '.tsv'\",\n            idColumnCreate: \"No debe contener una columna 'id' para nuevo\",\n            idColumnUpdate: \"Debe contener una columna 'id' para sobrescribir\",\n            chooseFile: 'Elija Archivo',\n            processed: 'Procesado',\n            rowCount: 'Cuenta de filas',\n            cancel: 'Cancelar',\n            importNew: 'Importar nuevo',\n            importOverride: 'Importar y sobrescribir ',\n        },\n    },\n};\n//# sourceMappingURL=es.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    csv: {\n        main: {\n            import: 'Import',\n        },\n        error: {\n            csvInvalid: \"The CSV is invalid\",\n            csvInvalidUser: \"The CSV failed validation\",\n            noId: \"Overwrite requires field 'id'\",\n            hasId: \"Create should not include field 'id'\",\n            importing: 'Error importing',\n            emptyResource: \"The 'resource' property was empty, did you pass in the {...props} to the ImportButton?\",\n        },\n        alert: {\n            imported: 'Imported %{fname}',\n        },\n        dialog: {\n            importTo: 'Importing %{count} items to \"%{resource}\"',\n            copyOverwriteWarning: 'The destination %{resource} has %{count} with the same id',\n            dataFileReq: 'Data file requirements',\n            extension: \"Must be a '.csv' or '.tsv' file\",\n            idColumnCreate: \"Must not contain an 'id' column for new\",\n            idColumnUpdate: \"Must contain an 'id' column for overwrite\",\n            chooseFile: 'Choose File',\n            processed: 'Processed',\n            rowCount: 'Row Count',\n            cancel: 'Cancel',\n            importNew: 'Import as New',\n            importOverride: 'Import as Overwrite ',\n        },\n    },\n};\n//# sourceMappingURL=en.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    csv: {\n        main: {\n            import: '导入',\n        },\n        error: {\n            noId: \"覆盖更新记录时，必须包含'id'字段\",\n            hasId: \"创建新记录时，不能包含id字段\",\n            importing: '导入时发生错误',\n            emptyResource: \"'resource' 属性为空,你是否将{...props}设置到ImportButton了?\",\n        },\n        alert: {\n            imported: '导入完成 %{filename}',\n        },\n        dialog: {\n            importTo: '导入到',\n            dataFileReq: '数据文件要求',\n            extension: \"导入只支持'.csv' 或 '.tsv'的文件类型\",\n            idColumnCreate: \"新增时不能包含'id'的列\",\n            idColumnUpdate: \"更新时必须包含'id'的列\",\n            chooseFile: '选择文件',\n            processed: '处理',\n            rowCount: '记录合计',\n            cancel: '取消',\n            importNew: '新增导入',\n            importOverride: '更新导入 ',\n        },\n    },\n};\n//# sourceMappingURL=cn.js.map","// in src/posts.js\r\nimport * as React from \"react\";\r\n// tslint:disable-next-line:no-var-requires\r\nimport {\r\n  Datagrid,\r\n  List,\r\n  Show,\r\n  Create,\r\n  Edit,\r\n  SimpleShowLayout,\r\n  SimpleForm,\r\n  TextField,\r\n  TextInput,\r\n  TopToolbar,\r\n  ShowButton,\r\n  EditButton,\r\n  DeleteButton,\r\n} from \"react-admin\";\r\n\r\n// Change this import to: from \"react-admin-import-csv\"\r\nimport { ImportButton } from \"./build-watch\";\r\nimport { CreateButton, ExportButton } from \"ra-ui-materialui\";\r\n\r\nconst ListActions = (props) => {\r\n  const {\r\n    className,\r\n    basePath,\r\n    total,\r\n    resource,\r\n    currentSort,\r\n    filterValues,\r\n    exporter,\r\n  } = props;\r\n  const config = {\r\n    logging: true,\r\n    validateRow: async (row) => {\r\n      if (row.id) {\r\n        // throw new Error(\"AAAA\");\r\n      }\r\n    },\r\n  };\r\n  return (\r\n    <TopToolbar className={className}>\r\n      <CreateButton basePath={basePath} />\r\n      <ExportButton\r\n        disabled={total === 0}\r\n        resource={resource}\r\n        sort={currentSort}\r\n        filter={filterValues}\r\n        exporter={exporter}\r\n      />\r\n      <ImportButton {...props} {...config} />\r\n    </TopToolbar>\r\n  );\r\n};\r\n\r\nexport const PostList = (props) => (\r\n  <List {...props} actions={<ListActions />}>\r\n    <Datagrid>\r\n      <TextField source=\"id\" />\r\n      <TextField source=\"title\" />\r\n      <ShowButton label=\"\" />\r\n      <EditButton label=\"\" />\r\n      <DeleteButton label=\"\" redirect={false} />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n\r\nexport const PostShow = (props) => (\r\n  <Show {...props}>\r\n    <SimpleShowLayout>\r\n      <TextField source=\"id\" />\r\n      <TextField source=\"title\" />\r\n    </SimpleShowLayout>\r\n  </Show>\r\n);\r\n\r\nexport const PostCreate = (props) => (\r\n  <Create {...props}>\r\n    <SimpleForm>\r\n      <TextInput source=\"id\" />\r\n      <TextInput source=\"title\" />\r\n    </SimpleForm>\r\n  </Create>\r\n);\r\n\r\nexport const PostEdit = (props) => (\r\n  <Edit {...props}>\r\n    <SimpleForm>\r\n      <TextInput disabled source=\"id\" />\r\n      <TextInput source=\"title\" />\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n","// in src/App.js\r\nimport React from \"react\";\r\nimport { Admin, Resource, resolveBrowserLocale, useLocale } from \"react-admin\";\r\nimport polyglotI18nProvider from \"ra-i18n-polyglot\";\r\nimport fakeDataProvider from \"ra-data-fakerest\";\r\nimport { PostList, PostShow, PostEdit, PostCreate } from \"./posts\";\r\nimport englishMessages from \"ra-language-english\";\r\nimport spanishMessages from \"ra-language-spanish\";\r\nimport chineseMessages from \"ra-language-chinese\";\r\nimport * as domainMessages from \"./build-watch/i18n\";\r\n\r\nconst App = () => {\r\n  const dataProvider = fakeDataProvider({\r\n    posts: [\r\n      { id: 0, title: \"Hello, world!\" },\r\n      { id: 1, title: \"FooBar\" },\r\n      { id: 2, title: \"Another\" },\r\n      { id: 3, title: \"Thing\" },\r\n    ],\r\n  });\r\n\r\n  // Setup i18n\r\n  const locale = useLocale();\r\n  const messages = {\r\n    en: { ...englishMessages, ...domainMessages.en },\r\n    cn: { ...chineseMessages, ...domainMessages.cn },\r\n    es: { ...spanishMessages, ...domainMessages.es },\r\n  };\r\n  const i18nProvider = polyglotI18nProvider(\r\n    (locale) => (messages[locale] ? messages[locale] : messages.en),\r\n    locale || resolveBrowserLocale()\r\n  );\r\n\r\n  return (\r\n    <Admin dataProvider={dataProvider} i18nProvider={i18nProvider}>\r\n      <Resource\r\n        name=\"posts\"\r\n        list={PostList}\r\n        show={PostShow}\r\n        edit={PostEdit}\r\n        create={PostCreate}\r\n      />\r\n    </Admin>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}